"""
Django settings for miproyecto project.
Generated by 'django-admin startproject' using Django 5.1.7.
"""

from pathlib import Path

# ðŸ“Œ Rutas base del proyecto
BASE_DIR = Path(__file__).resolve().parent.parent

# ðŸ“Œ Seguridad y configuraciÃ³n bÃ¡sica
SECRET_KEY = 'django-insecure-*1@xshxo38hy0b2^p-9-^-rm&o2+g$!wy6mh!04r27nce7b@vj'
DEBUG = True
ALLOWED_HOSTS = []

# ðŸ“Œ Aplicaciones instaladas
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'authapp',  # âœ… Nuestra aplicaciÃ³n personalizada
]

# ðŸ“Œ Middlewares
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# ðŸ“Œ ConfiguraciÃ³n de URLs
ROOT_URLCONF = 'miproyecto.urls'

# ðŸ“Œ ConfiguraciÃ³n de Templates
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / "templates"],  # âœ… Django buscarÃ¡ en templates/
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# ðŸ“Œ ConfiguraciÃ³n de WSGI
WSGI_APPLICATION = 'miproyecto.wsgi.application'

# ðŸ“Œ Base de datos (SQLite por defecto)
DATABASES = {
    'default': {
        'ENGINE': 'djongo',
        'NAME': 'miproyecto_db',  # Nombre de la base de datos en MongoDB
        'CLIENT': {
            'host': 'mongodb://localhost:27017/',  # DirecciÃ³n de MongoDB
            'username': '',  # Si tienes autenticaciÃ³n, coloca tu usuario
            'password': '',  # Si tienes autenticaciÃ³n, coloca tu contraseÃ±a
            'authSource': 'admin',  # Base de datos donde estÃ¡ el usuario (deja "admin" si no cambiaste nada)
        }
    }
}

# ðŸ“Œ AutenticaciÃ³n de Usuarios
AUTH_USER_MODEL = 'authapp.CustomUser'  # âœ… Ahora Django usarÃ¡ nuestro modelo de usuario personalizado

# ðŸ“Œ ValidaciÃ³n de contraseÃ±as
AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]

# ðŸ“Œ InternacionalizaciÃ³n
LANGUAGE_CODE = 'es'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

# ðŸ“Œ Archivos estÃ¡ticos (CSS, JavaScript, ImÃ¡genes)
STATIC_URL = '/static/'
STATICFILES_DIRS = [BASE_DIR / "static"]  # âœ… Ahora Django sabrÃ¡ dÃ³nde buscar archivos estÃ¡ticos

# ðŸ“Œ ConfiguraciÃ³n de archivos subidos por usuarios (Media)
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / "media"

# ðŸ“Œ ConfiguraciÃ³n de campo de clave primaria por defecto
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# settings.py

LOGIN_URL = 'login'
LOGIN_REDIRECT_URL = 'user_profile'  # Si no estÃ¡ definida otra redirecciÃ³n, irÃ¡ a esta por defecto
LOGOUT_REDIRECT_URL = 'login'





